{"version":3,"sources":["assets/logo.svg","components/common/sidebar.js","components/product/editPBIForm.js","components/product/actionButtons.js","components/product/addPBIForm.js","components/product/productBacklog.js","components/sprint/sprintBacklog.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Sider","Layout","Sidebar","breakpoint","collapsedWidth","theme","className","src","logo","alt","mode","defaultSelectedKeys","Item","key","to","type","React","Component","Option","Select","EditPBIForm","props","handleTitleInput","e","setState","title","target","value","handleDetailInput","detail","handleStoryPointInput","story_point","handleStatusInput","status","handleSubmit","axios","put","pbi","id","state","sprintNo","sprint_no","start_date","priority","then","res","refresh","close","err","console","log","visible","this","onOk","onCancel","labelCol","xs","span","sm","wrapperCol","label","onChange","defaultValue","style","width","TextArea","rows","defaults","xsrfHeaderName","xsrfCookieName","ActionButtons","handleDelete","delete","data","message","success","catch","handleMove","option","post","withCredentials","handleEdit","editing","handleClose","handleMoveToSprint","icon","onClick","onConfirm","AddPBIForm","v","postNewPBI","priority_max","placeholder","Header","Content","Footer","ProductBacklog","fetch","get","sorted","sort","a","b","i","acc","length","pbiList","error","handleViewChange","currentView","showEditForm","adding","closeEditForm","columns","dataIndex","render","pagination","height","background","padding","textAlign","margin","Group","Button","rowKey","toString","dataSource","filter","Column","Table","ColumnGroup","SprintBacklog","j","pbis","tasks","remaining","total","estimated_time","task","map","color","name","UserCenter","Home","App","path","component","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.00a3dff2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.25bf045c.svg\";","import React from 'react';\r\nimport { } from 'antd';\r\n\r\nimport { Layout, Menu, Icon } from 'antd';\r\nimport { Link } from \"react-router-dom\";\r\nimport './sidebar.css';\r\n\r\n\r\nimport logo from '../../assets/logo.svg'\r\nconst { Sider } = Layout;\r\n\r\nclass Sidebar extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <Sider\r\n                breakpoint=\"lg\"\r\n                collapsedWidth=\"0\"\r\n                theme=\"dark\"\r\n            >\r\n                <div className=\"logo\">\r\n                    <img src={logo} alt=\"fireSpot\" />\r\n                </div>\r\n                <Menu theme=\"dark\" mode=\"inline\" defaultSelectedKeys={['2']}>\r\n                    <Menu.Item key=\"1\" to=\"/\">\r\n                        <Icon type=\"home\" />\r\n                            <span className=\"nav-text\" >Home</span>\r\n                            <Link to=\"/\" />\r\n                    </Menu.Item>\r\n                    <Menu.Item key=\"2\">\r\n                        <Icon type=\"user\" />                   \r\n                            <span className=\"nav-text\" >Product Backlog</span>\r\n                            <Link to=\"/product\"></Link>\r\n                    </Menu.Item>\r\n                    <Menu.Item key=\"3\">\r\n                        <Icon type=\"video-camera\" />\r\n                            <span className=\"nav-text\" >Sprint Backlog</span>\r\n                            <Link to=\"/sprint\"></Link>\r\n                    </Menu.Item>\r\n                    <Menu.Item key=\"4\">\r\n                        <Icon type=\"user\" />           \r\n                            <span className=\"nav-text\" >User Center</span>\r\n                            <Link to=\"/user\"></Link>\r\n                    </Menu.Item>\r\n                </Menu>\r\n            </Sider>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default Sidebar;","import React from 'react';\r\nimport axios from 'axios';\r\n\r\nimport { Modal, Form, Input, InputNumber, message, Select } from 'antd';\r\nconst { Option } = Select;\r\n\r\nclass EditPBIForm extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            title: this.props.pbi.title,\r\n            detail: this.props.pbi.detail,\r\n            story_point: this.props.pbi.story_point,\r\n            status: this.props.pbi.status,\r\n        }\r\n    }\r\n\r\n    handleTitleInput = (e) => {\r\n        this.setState({ title: e.target.value })\r\n    }\r\n\r\n    handleDetailInput = (e) => {\r\n        this.setState({ detail: e.target.value })\r\n    }\r\n\r\n    handleStoryPointInput = (e) => {\r\n        this.setState({ story_point: e.target.value })\r\n    }\r\n\r\n    handleStatusInput = (e) => {\r\n        this.setState({ status: e.target.value })\r\n    }\r\n\r\n    handleSubmit = () => {\r\n        axios.put(`http://127.0.0.1:8000/product/api/${this.props.pbi.id}/update/`, {\r\n            title: this.state.title,\r\n            detail: this.state.detail,\r\n            status: this.state.status,\r\n            sprintNo: this.props.pbi.sprint_no,\r\n            start_date: this.props.pbi.start_date,\r\n            story_point: this.state.story_point,\r\n            priority: this.props.pbi.priority,\r\n        })\r\n            .then(res => {\r\n                this.props.refresh();\r\n                this.props.close();\r\n            })\r\n            .then(err => console.log(err))\r\n    }\r\n\r\n    render() {\r\n        const formItemLayout = {\r\n            labelCol: {\r\n                xs: { span: 24 },\r\n                sm: { span: 8 },\r\n            },\r\n            wrapperCol: {\r\n                xs: { span: 24 },\r\n                sm: { span: 16 },\r\n            },\r\n        };\r\n\r\n        return (\r\n            <Modal\r\n                title=\"Edit PBI\"\r\n                visible={this.props.visible}\r\n                onOk={this.handleSubmit}\r\n                onCancel={this.props.close}\r\n            >\r\n                <Form {...formItemLayout}>\r\n                    <Form.Item label=\"Title\">\r\n                        <Input value={this.state.title} onChange={this.handleTitleInput} />\r\n                    </Form.Item>\r\n                    <Form.Item label=\"Status\">\r\n                        <Select defaultValue={this.state.status} style={{ width: 120 }}>\r\n                            <Option value=\"To Do\">To Do</Option>\r\n                            <Option value=\"In Progress\">In Progress</Option>\r\n                            <Option value=\"Done\">Done</Option>\r\n                        </Select>\r\n                    </Form.Item>\r\n                    <Form.Item label=\"Story Points\">\r\n                        <InputNumber value={this.state.story_point} onChange={this.handleStoryPointInput} />\r\n                    </Form.Item>\r\n                    <Form.Item label=\"Details\">\r\n                        <Input.TextArea value={this.state.detail} rows={4} onChange={this.handleDetailInput} />\r\n                    </Form.Item>\r\n                </Form>\r\n            </Modal>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EditPBIForm;","import React from 'react';\r\nimport axios from 'axios';\r\nimport { Button, Popconfirm, message, Tooltip } from 'antd';\r\nimport EditPBIForm from './editPBIForm';\r\n\r\naxios.defaults.xsrfHeaderName = \"X-CSRFToken\"\r\naxios.defaults.xsrfCookieName = 'csrftoken'\r\n\r\nclass ActionButtons extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            editing: false,\r\n        }\r\n    }\r\n\r\n    handleDelete = () => {\r\n        axios.delete(`http://127.0.0.1:8000/product/api/${this.props.pbi.id}/delete/`, {\r\n            data: {\r\n                id: this.props.pbi.id\r\n            }\r\n        })\r\n            .then(res => {\r\n                this.props.refresh()\r\n                message.success(\"PBI deleted!\", 3)\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    handleMove = (option) => {\r\n        axios.post(\"http://127.0.0.1:8000/product/api/move/\", {\r\n            'priority': this.props.pbi.priority,\r\n            'option': option,\r\n            withCredentials: true,\r\n        })\r\n            .then(res => {\r\n                this.props.refresh()\r\n                message.success(\"PBI moved!\", 3)\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    handleEdit = () => {\r\n        this.setState({\r\n            editing: true,\r\n        })\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.setState({\r\n            editing: false,\r\n        })\r\n    }\r\n\r\n    handleMoveToSprint = () => {\r\n        axios.post(\"http://127.0.0.1:8000/product/api/movetosprint/\", {\r\n            'id': this.props.pbi.id,\r\n        })\r\n            .then(res => {\r\n                message.success(\"PBI moved to sprint!\", 3)\r\n                this.props.refresh()\r\n            })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Tooltip title=\"Move up\">\r\n                    <Button icon=\"up\" onClick={() => this.handleMove('up')} />\r\n                </Tooltip>\r\n                <Tooltip title=\"Move down\">\r\n                    <Button icon=\"down\" onClick={() => this.handleMove('down')} />\r\n                </Tooltip>\r\n                <Tooltip title=\"Delete\">\r\n                    <Popconfirm title=\"Sure to delete?\" onConfirm={() => this.handleDelete()}>\r\n                        <Button icon=\"delete\" />\r\n                    </Popconfirm>\r\n                </Tooltip>\r\n                <Tooltip title=\"Edit\">\r\n                    <Button icon=\"edit\" onClick={this.handleEdit} />\r\n                </Tooltip>\r\n                <EditPBIForm\r\n                    pbi={this.props.pbi}\r\n                    visible={this.state.editing}\r\n                    refresh={this.props.refresh}\r\n                    close={this.handleClose}\r\n                />\r\n                <Tooltip title=\"Move to sprint\">\r\n                    <Popconfirm title=\"Move to sprint?\" onConfirm={() => this.handleMoveToSprint()}>\r\n                        <Button icon=\"forward\" />\r\n                    </Popconfirm>\r\n                </Tooltip>\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\nexport default ActionButtons;","import React from 'react';\r\nimport axios from 'axios';\r\n\r\nimport { Modal, Form, Input, InputNumber, message } from 'antd';\r\n\r\nclass AddPBIForm extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            title: \"\",\r\n            detail: \"\",\r\n            story_point: 0,\r\n        }\r\n    }\r\n\r\n    handleTitleInput = (e) => {\r\n        this.setState({ title: e.target.value })\r\n    }\r\n\r\n    handleDetailInput = (e) => {\r\n        this.setState({ detail: e.target.value })\r\n    }\r\n\r\n    handleStoryPointInput = (v) => {\r\n        this.setState({ story_point: v })\r\n    }\r\n\r\n    postNewPBI = () => {\r\n        axios.post(\"http://127.0.0.1:8000/product/api/create/\", {\r\n            title: this.state.title,\r\n            detail: this.state.detail,\r\n            status: \"To Do\",\r\n            sprint_no: 0,\r\n            story_point: this.state.story_point,\r\n            start_date: \"2019-01-01\",\r\n            priority: this.props.priority_max + 1\r\n        })\r\n            .then(res => {\r\n                message.success(\"New PBI created!\", 3)\r\n                this.setState({\r\n                    title: \"\",\r\n                    detail: \"\",\r\n                    story_point: 0,\r\n                })\r\n                this.props.refresh()\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n            })\r\n    }\r\n\r\n    handleSubmit = () => {\r\n        this.postNewPBI()\r\n        this.props.close()\r\n    }\r\n\r\n    render() {\r\n        const formItemLayout = {\r\n            labelCol: {\r\n                xs: { span: 24 },\r\n                sm: { span: 8 },\r\n            },\r\n            wrapperCol: {\r\n                xs: { span: 24 },\r\n                sm: { span: 16 },\r\n            },\r\n        };\r\n\r\n        return (<div>\r\n            <Modal\r\n                title=\"Add PBI\"\r\n                visible={this.props.visible}\r\n                onOk={this.handleSubmit}\r\n                onCancel={this.props.close}\r\n            >\r\n                <Form {...formItemLayout}>\r\n                    <Form.Item label=\"Title\">\r\n                        <Input value={this.state.title} onChange={this.handleTitleInput} placeholder=\"Enter title\" />\r\n                    </Form.Item>\r\n                    <Form.Item label=\"Story Points\">\r\n                        <InputNumber value={this.state.story_point} onChange={this.handleStoryPointInput} defaultValue={0} />\r\n                    </Form.Item>\r\n                    <Form.Item label=\"Details\">\r\n                        <Input.TextArea value={this.state.detail} rows={4} onChange={this.handleDetailInput} placeholder=\"Enter detail\" />\r\n                    </Form.Item>\r\n                </Form>\r\n            </Modal>\r\n        </div>)\r\n    }\r\n}\r\n\r\nexport default AddPBIForm;","import React from 'react';\r\nimport axios from 'axios';\r\n\r\nimport { Layout, Menu, Icon, Table, Select, Radio, Button } from 'antd';\r\nimport ActionButtons from './actionButtons'\r\nimport AddPBIForm from './addPBIForm';\r\n\r\nimport logo from '../../assets/logo.svg'\r\nimport './productBacklog.css';\r\nimport 'antd/dist/antd.css';\r\n\r\nconst { Header, Content, Footer, Sider } = Layout;\r\n\r\nclass ProductBacklog extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            currentView: true,\r\n            pbiList: [],\r\n            pagination: {},\r\n            adding: false,\r\n            priority_max: -1,\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetch();\r\n    }\r\n\r\n    fetch = () => {\r\n        axios.get(\"http://127.0.0.1:8000/product/api/\")\r\n            .then(res => {\r\n                // Fetch PBI list from backend\r\n                let sorted = res.data\r\n                sorted.sort((a, b) => (a.priority < b.priority) ? -1 : 1)\r\n\r\n                // Calculate accumulated story point for each PBI\r\n                let acc = 0\r\n                var i;\r\n                for (i = 0; i < sorted.length; ++i) {\r\n                    acc += sorted[i].story_point;\r\n                    sorted[i].acc = acc;\r\n                }\r\n\r\n                this.setState({\r\n                    pbiList: sorted,\r\n                    priority_max: sorted[sorted.length - 1].priority,\r\n                })\r\n            })\r\n            .catch(error => console.log(error))\r\n    }\r\n\r\n    handleViewChange = e => {\r\n        this.setState({ currentView: !this.state.currentView })\r\n    }\r\n\r\n    showEditForm = () => {\r\n        this.setState({\r\n            adding: true\r\n        })\r\n    }\r\n\r\n    closeEditForm = () => {\r\n        this.setState({\r\n            adding: false\r\n        })\r\n    }\r\n\r\n    columns = [\r\n        { title: 'Title', dataIndex: 'title', width: '10%' },\r\n        { title: 'Sprint No', dataIndex: 'sprint_no', width: '10%' },\r\n        { title: 'Status', dataIndex: 'status', width: '10%' },\r\n        { title: 'Detail', dataIndex: 'detail', width: '15%' },\r\n        { title: 'Story Point', dataIndex: 'story_point', width: '10%' },\r\n        { title: 'Accumulated Story Point', dataIndex: 'acc', width: '10%' },\r\n        { title: 'Priority', dataIndex: 'priority', width: '10%' },\r\n        { title: 'Actions', render: (pbi) => <ActionButtons pbi={pbi} refresh={this.fetch} /> }\r\n    ];\r\n\r\n    render() {\r\n        return (\r\n            <Layout style={{ height: \"100vh\" }}>\r\n                    <Header style={{ background: '#fff', padding: 0, textAlign: \"center\" }}>Product Backlog</Header>\r\n                    <Content style={{ margin: '24px 16px 0' }}>\r\n                        <div >\r\n                            <Radio.Group value={this.state.currentView ? \"current\" : \"full\"}\r\n                                onChange={this.handleViewChange}>\r\n                                <Radio.Button value=\"current\">Current View</Radio.Button>\r\n                                <Radio.Button value=\"full\">Full View</Radio.Button>\r\n                            </Radio.Group>\r\n\r\n                            <Button icon=\"plus\" onClick={this.showEditForm} />\r\n                            <AddPBIForm\r\n                                visible={this.state.adding}\r\n                                close={this.closeEditForm}\r\n                                priority_max={this.state.priority_max}\r\n                                refresh={this.fetch}\r\n                            />\r\n                        </div>\r\n                        <Table\r\n                            columns={this.columns}\r\n                            rowKey={pbi => pbi.id.toString()}\r\n                            pagination={this.state.pagination}\r\n                            dataSource={this.state.currentView ?\r\n                                this.state.pbiList.filter(pbi => pbi.status !== \"Done\")\r\n                                : this.state.pbiList}\r\n                        />\r\n                    </Content>\r\n                    <Footer style={{ textAlign: \"center\" }}>Developed by FastDev (Group F)</Footer>\r\n            </Layout>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ProductBacklog;\r\n","import React from \"react\";\r\nimport axios from 'axios';\r\nimport { Layout, Table, Tag } from \"antd\";\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Header } = Layout;\r\n\r\nclass SprintBacklog extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            pbis: []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetch()\r\n    }\r\n\r\n    fetch = () => {\r\n        axios.get(\"http://127.0.0.1:8000/sprint/api/\")\r\n            .then(res => {\r\n                let pbis = res.data;\r\n                var i, j;\r\n                for(i = 0; i < pbis.length; ++i){\r\n                    let tasks = pbis[i].tasks\r\n                    var remaining = 0, total= 0;\r\n                    for(j = 0; j < tasks.length; ++j) {\r\n                        total = total + tasks[j].estimated_time;\r\n                        if (tasks[j].status != \"Done\") {\r\n                            remaining = remaining + tasks[j].estimated_time;\r\n                        }\r\n                    }\r\n                    pbis[i].total = total;\r\n                    pbis[i].remaining = remaining;\r\n                }\r\n\r\n\r\n                this.setState({\r\n                    pbis: pbis\r\n                })\r\n\r\n                console.log(this.state.pbis)\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Layout style={{ height: \"100vh\" }}>\r\n                <Header style={{ background: \"#fff\", padding: 0, textAlign: \"center\" }}>\r\n                    Sprint Backlog\r\n                </Header>\r\n                <Table dataSource={this.state.pbis} >\r\n                    <Column\r\n                        title=\"PBI\"\r\n                        dataIndex=\"title\"\r\n                        key=\"pbi\"\r\n                        width=\"15%\"\r\n                        render={title => <span>{title}</span>}\r\n                    />\r\n                    <ColumnGroup title=\"Task\">\r\n                        <Column\r\n                            title=\"To Do\"\r\n                            dataIndex=\"tasks\"\r\n                            key=\"to_do\"\r\n                            render={tasks => (\r\n                                <span>\r\n                                    {tasks.filter(task => task.status == \"To Do\")\r\n                                        .map(task => (\r\n                                            <Tag color=\"blue\" key={task}>\r\n                                                {task.name}\r\n                                            </Tag>\r\n                                        ))}\r\n                                </span>\r\n                            )}\r\n                        />\r\n                        <Column\r\n                            title=\"In Progress\"\r\n                            dataIndex=\"tasks\"\r\n                            key=\"in_progress\"\r\n                            render={tasks => (\r\n                                <span>\r\n                                    {tasks.filter(task => task.status == \"In Progress\")\r\n                                        .map(task => (\r\n                                            <Tag color=\"blue\" key={task}>\r\n                                                {task.name}\r\n                                            </Tag>\r\n                                        ))}\r\n                                </span>\r\n                            )}\r\n                        />\r\n                        <Column\r\n                            title=\"Done\"\r\n                            dataIndex=\"tasks\"\r\n                            key=\"done\"\r\n                            render={tasks => (\r\n                                <span>\r\n                                    {tasks.filter(task => task.status == \"Done\")\r\n                                        .map(task => (\r\n                                            <Tag color=\"blue\" key={task}>\r\n                                                {task.name}\r\n                                            </Tag>\r\n                                        ))}\r\n                                </span>\r\n                            )}\r\n                        />\r\n                        /> */}\r\n                    </ColumnGroup>\r\n                    <Column title=\"Remaining Effort\" dataIndex=\"remaining\" key=\"remaining\" width=\"15%\" render={remaining => <span>{remaining}</span>}/>\r\n                    <Column title=\"Remaining Effort\" dataIndex=\"total\" key=\"total\" width=\"15%\" render={total => <span>{total}</span>}/>\r\n                </Table>\r\n            </Layout>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SprintBacklog;\r\n","import React from 'react';\nimport { Layout } from 'antd';\n\nimport { BrowserRouter, Route, Switch, Link } from \"react-router-dom\";\nimport Sidebar from './components/common/sidebar';\nimport ProductBacklog from './components/product/productBacklog'\nimport SprintBacklog from './components/sprint/sprintBacklog'\n\nclass App extends React.Component {\n    render() {\n        return (\n            <BrowserRouter>\n                <Layout style={{ height: \"100vh\" }}>\n                    <Sidebar />\n                    <Layout>\n                        <Switch>\n                            <Route path=\"/product\" component={ProductBacklog} />\n                            <Route path=\"/sprint\" component={SprintBacklog} />\n                            <Route path=\"/user\" component={UserCenter} />\n                            <Route path=\"/\" component={Home} />\n                        </Switch>\n                    </Layout>\n                </Layout>\n            </BrowserRouter>\n        )\n    }\n}\n\nfunction UserCenter() {\n    return <h1>User Center</h1>\n}\n\nfunction Home() {\n    return <h2>Home</h2>;\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}